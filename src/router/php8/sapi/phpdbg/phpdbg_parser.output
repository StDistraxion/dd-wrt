Terminals unused in grammar

   "string (some input, perhaps)"
   "input"


Grammar

    0 $accept: input $end

    1 input: non_empty_input
    2      | %empty

    3 non_empty_input: command
    4                | non_empty_input "# (pound sign)" command

    5 command: parameters
    6        | full_expression

    7 parameters: parameter
    8           | parameters parameter
    9           | parameters "request id (-r %d)"

   10 parameter: "identifier (command or function name)" ": (colon)" "digits (numbers)"
   11          | "identifier (command or function name)" ": (colon)" "# (pound sign followed by digits)" "digits (numbers)"
   12          | "protocol (file://)" "identifier (command or function name)" ": (colon)" "digits (numbers)"
   13          | "protocol (file://)" "identifier (command or function name)" ": (colon)" "# (pound sign followed by digits)" "digits (numbers)"
   14          | "identifier (command or function name)" ":: (double colon)" "identifier (command or function name)"
   15          | "identifier (command or function name)" ":: (double colon)" "identifier (command or function name)" "# (pound sign followed by digits)" "digits (numbers)"
   16          | "identifier (command or function name)" "# (pound sign followed by digits)" "digits (numbers)"
   17          | "if (condition)" "input (input string or data)"
   18          | "opcode"
   19          | "address"
   20          | "literal (string)"
   21          | "truthy (true, on, yes or enabled)"
   22          | "falsy (false, off, no or disabled)"
   23          | "digits (numbers)"
   24          | "identifier (command or function name)"

   25 req_id: "request id (-r %d)"
   26       | %empty

   27 full_expression: "eval" req_id "input (input string or data)"
   28                | "shell" req_id "input (input string or data)"
   29                | "run" req_id
   30                | "run" req_id "input (input string or data)"


Terminals, with rules where they appear

$end (0) 0
error (256)
"eval" (258) 27
"run" (259) 29 30
"shell" (260) 28
"if (condition)" (261) 17
"truthy (true, on, yes or enabled)" (262) 21
"falsy (false, off, no or disabled)" (263) 22
"string (some input, perhaps)" (264)
": (colon)" (265) 10 11 12 13
":: (double colon)" (266) 14 15
"# (pound sign followed by digits)" (267) 11 13 15 16
"# (pound sign)" (268) 4
"protocol (file://)" (269) 12 13
"digits (numbers)" (270) 10 11 12 13 15 16 23
"literal (string)" (271) 20
"address" (272) 19
"opcode" (273) 18
"identifier (command or function name)" (274) 10 11 12 13 14 15 16
    24
"input (input string or data)" (275) 17 27 28 30
"input" (276)
"request id (-r %d)" (277) 9 25


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
input (24)
    on left: 1 2, on right: 0
non_empty_input (25)
    on left: 3 4, on right: 1 4
command (26)
    on left: 5 6, on right: 3 4
parameters (27)
    on left: 7 8 9, on right: 5 8 9
parameter (28)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right:
    7 8
req_id (29)
    on left: 25 26, on right: 27 28 29 30
full_expression (30)
    on left: 27 28 29 30, on right: 6


State 0

    0 $accept: . input $end

    "eval"                                   shift, and go to state 1
    "run"                                    shift, and go to state 2
    "shell"                                  shift, and go to state 3
    "if (condition)"                         shift, and go to state 4
    "truthy (true, on, yes or enabled)"      shift, and go to state 5
    "falsy (false, off, no or disabled)"     shift, and go to state 6
    "protocol (file://)"                     shift, and go to state 7
    "digits (numbers)"                       shift, and go to state 8
    "literal (string)"                       shift, and go to state 9
    "address"                                shift, and go to state 10
    "opcode"                                 shift, and go to state 11
    "identifier (command or function name)"  shift, and go to state 12

    $default  reduce using rule 2 (input)

    input            go to state 13
    non_empty_input  go to state 14
    command          go to state 15
    parameters       go to state 16
    parameter        go to state 17
    full_expression  go to state 18


State 1

   27 full_expression: "eval" . req_id "input (input string or data)"

    "request id (-r %d)"  shift, and go to state 19

    $default  reduce using rule 26 (req_id)

    req_id  go to state 20


State 2

   29 full_expression: "run" . req_id
   30                | "run" . req_id "input (input string or data)"

    "request id (-r %d)"  shift, and go to state 19

    $default  reduce using rule 26 (req_id)

    req_id  go to state 21


State 3

   28 full_expression: "shell" . req_id "input (input string or data)"

    "request id (-r %d)"  shift, and go to state 19

    $default  reduce using rule 26 (req_id)

    req_id  go to state 22


State 4

   17 parameter: "if (condition)" . "input (input string or data)"

    "input (input string or data)"  shift, and go to state 23


State 5

   21 parameter: "truthy (true, on, yes or enabled)" .

    $default  reduce using rule 21 (parameter)


State 6

   22 parameter: "falsy (false, off, no or disabled)" .

    $default  reduce using rule 22 (parameter)


State 7

   12 parameter: "protocol (file://)" . "identifier (command or function name)" ": (colon)" "digits (numbers)"
   13          | "protocol (file://)" . "identifier (command or function name)" ": (colon)" "# (pound sign followed by digits)" "digits (numbers)"

    "identifier (command or function name)"  shift, and go to state 24


State 8

   23 parameter: "digits (numbers)" .

    $default  reduce using rule 23 (parameter)


State 9

   20 parameter: "literal (string)" .

    $default  reduce using rule 20 (parameter)


State 10

   19 parameter: "address" .

    $default  reduce using rule 19 (parameter)


State 11

   18 parameter: "opcode" .

    $default  reduce using rule 18 (parameter)


State 12

   10 parameter: "identifier (command or function name)" . ": (colon)" "digits (numbers)"
   11          | "identifier (command or function name)" . ": (colon)" "# (pound sign followed by digits)" "digits (numbers)"
   14          | "identifier (command or function name)" . ":: (double colon)" "identifier (command or function name)"
   15          | "identifier (command or function name)" . ":: (double colon)" "identifier (command or function name)" "# (pound sign followed by digits)" "digits (numbers)"
   16          | "identifier (command or function name)" . "# (pound sign followed by digits)" "digits (numbers)"
   24          | "identifier (command or function name)" .

    ": (colon)"                          shift, and go to state 25
    ":: (double colon)"                  shift, and go to state 26
    "# (pound sign followed by digits)"  shift, and go to state 27

    $default  reduce using rule 24 (parameter)


State 13

    0 $accept: input . $end

    $end  shift, and go to state 28


State 14

    1 input: non_empty_input .
    4 non_empty_input: non_empty_input . "# (pound sign)" command

    "# (pound sign)"  shift, and go to state 29

    $default  reduce using rule 1 (input)


State 15

    3 non_empty_input: command .

    $default  reduce using rule 3 (non_empty_input)


State 16

    5 command: parameters .
    8 parameters: parameters . parameter
    9           | parameters . "request id (-r %d)"

    "if (condition)"                         shift, and go to state 4
    "truthy (true, on, yes or enabled)"      shift, and go to state 5
    "falsy (false, off, no or disabled)"     shift, and go to state 6
    "protocol (file://)"                     shift, and go to state 7
    "digits (numbers)"                       shift, and go to state 8
    "literal (string)"                       shift, and go to state 9
    "address"                                shift, and go to state 10
    "opcode"                                 shift, and go to state 11
    "identifier (command or function name)"  shift, and go to state 12
    "request id (-r %d)"                     shift, and go to state 30

    $default  reduce using rule 5 (command)

    parameter  go to state 31


State 17

    7 parameters: parameter .

    $default  reduce using rule 7 (parameters)


State 18

    6 command: full_expression .

    $default  reduce using rule 6 (command)


State 19

   25 req_id: "request id (-r %d)" .

    $default  reduce using rule 25 (req_id)


State 20

   27 full_expression: "eval" req_id . "input (input string or data)"

    "input (input string or data)"  shift, and go to state 32


State 21

   29 full_expression: "run" req_id .
   30                | "run" req_id . "input (input string or data)"

    "input (input string or data)"  shift, and go to state 33

    $default  reduce using rule 29 (full_expression)


State 22

   28 full_expression: "shell" req_id . "input (input string or data)"

    "input (input string or data)"  shift, and go to state 34


State 23

   17 parameter: "if (condition)" "input (input string or data)" .

    $default  reduce using rule 17 (parameter)


State 24

   12 parameter: "protocol (file://)" "identifier (command or function name)" . ": (colon)" "digits (numbers)"
   13          | "protocol (file://)" "identifier (command or function name)" . ": (colon)" "# (pound sign followed by digits)" "digits (numbers)"

    ": (colon)"  shift, and go to state 35


State 25

   10 parameter: "identifier (command or function name)" ": (colon)" . "digits (numbers)"
   11          | "identifier (command or function name)" ": (colon)" . "# (pound sign followed by digits)" "digits (numbers)"

    "# (pound sign followed by digits)"  shift, and go to state 36
    "digits (numbers)"                   shift, and go to state 37


State 26

   14 parameter: "identifier (command or function name)" ":: (double colon)" . "identifier (command or function name)"
   15          | "identifier (command or function name)" ":: (double colon)" . "identifier (command or function name)" "# (pound sign followed by digits)" "digits (numbers)"

    "identifier (command or function name)"  shift, and go to state 38


State 27

   16 parameter: "identifier (command or function name)" "# (pound sign followed by digits)" . "digits (numbers)"

    "digits (numbers)"  shift, and go to state 39


State 28

    0 $accept: input $end .

    $default  accept


State 29

    4 non_empty_input: non_empty_input "# (pound sign)" . command

    "eval"                                   shift, and go to state 1
    "run"                                    shift, and go to state 2
    "shell"                                  shift, and go to state 3
    "if (condition)"                         shift, and go to state 4
    "truthy (true, on, yes or enabled)"      shift, and go to state 5
    "falsy (false, off, no or disabled)"     shift, and go to state 6
    "protocol (file://)"                     shift, and go to state 7
    "digits (numbers)"                       shift, and go to state 8
    "literal (string)"                       shift, and go to state 9
    "address"                                shift, and go to state 10
    "opcode"                                 shift, and go to state 11
    "identifier (command or function name)"  shift, and go to state 12

    command          go to state 40
    parameters       go to state 16
    parameter        go to state 17
    full_expression  go to state 18


State 30

    9 parameters: parameters "request id (-r %d)" .

    $default  reduce using rule 9 (parameters)


State 31

    8 parameters: parameters parameter .

    $default  reduce using rule 8 (parameters)


State 32

   27 full_expression: "eval" req_id "input (input string or data)" .

    $default  reduce using rule 27 (full_expression)


State 33

   30 full_expression: "run" req_id "input (input string or data)" .

    $default  reduce using rule 30 (full_expression)


State 34

   28 full_expression: "shell" req_id "input (input string or data)" .

    $default  reduce using rule 28 (full_expression)


State 35

   12 parameter: "protocol (file://)" "identifier (command or function name)" ": (colon)" . "digits (numbers)"
   13          | "protocol (file://)" "identifier (command or function name)" ": (colon)" . "# (pound sign followed by digits)" "digits (numbers)"

    "# (pound sign followed by digits)"  shift, and go to state 41
    "digits (numbers)"                   shift, and go to state 42


State 36

   11 parameter: "identifier (command or function name)" ": (colon)" "# (pound sign followed by digits)" . "digits (numbers)"

    "digits (numbers)"  shift, and go to state 43


State 37

   10 parameter: "identifier (command or function name)" ": (colon)" "digits (numbers)" .

    $default  reduce using rule 10 (parameter)


State 38

   14 parameter: "identifier (command or function name)" ":: (double colon)" "identifier (command or function name)" .
   15          | "identifier (command or function name)" ":: (double colon)" "identifier (command or function name)" . "# (pound sign followed by digits)" "digits (numbers)"

    "# (pound sign followed by digits)"  shift, and go to state 44

    $default  reduce using rule 14 (parameter)


State 39

   16 parameter: "identifier (command or function name)" "# (pound sign followed by digits)" "digits (numbers)" .

    $default  reduce using rule 16 (parameter)


State 40

    4 non_empty_input: non_empty_input "# (pound sign)" command .

    $default  reduce using rule 4 (non_empty_input)


State 41

   13 parameter: "protocol (file://)" "identifier (command or function name)" ": (colon)" "# (pound sign followed by digits)" . "digits (numbers)"

    "digits (numbers)"  shift, and go to state 45


State 42

   12 parameter: "protocol (file://)" "identifier (command or function name)" ": (colon)" "digits (numbers)" .

    $default  reduce using rule 12 (parameter)


State 43

   11 parameter: "identifier (command or function name)" ": (colon)" "# (pound sign followed by digits)" "digits (numbers)" .

    $default  reduce using rule 11 (parameter)


State 44

   15 parameter: "identifier (command or function name)" ":: (double colon)" "identifier (command or function name)" "# (pound sign followed by digits)" . "digits (numbers)"

    "digits (numbers)"  shift, and go to state 46


State 45

   13 parameter: "protocol (file://)" "identifier (command or function name)" ": (colon)" "# (pound sign followed by digits)" "digits (numbers)" .

    $default  reduce using rule 13 (parameter)


State 46

   15 parameter: "identifier (command or function name)" ":: (double colon)" "identifier (command or function name)" "# (pound sign followed by digits)" "digits (numbers)" .

    $default  reduce using rule 15 (parameter)
